store.df$Region_Lvl1 <- str_extract(store.df$Region_Lvl1, "[A-Z](?!.*[A-Z].*)")
store.df$Region_Lvl2 <- str_extract(store.df$Region_Lvl2, "\\d+")
store.df$Region_Lvl1 <- as.factor(store.df$Region_Lvl1)
store.df$Region_Lvl2 <- as.factor(store.df$Region_Lvl2)
table(store.df$Region_Lvl1)
as.data.frame(table(store.df$Region_Lvl2))
head(transaction.df <- read.table(paste0(path,
"Hackathon_FactSalesTransactionDATES_vShared.csv"),
header = TRUE,
sep = ","))
str(transaction.df)
head(transaction.df$TransactionDate <- as.POSIXct(transaction.df$TransactionDate,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE))))
cpi.df$Date_daily <- as.character(cpi.df$Date_daily)
cpi.df$Date_daily <- as.POSIXct(cpi.df$Date_daily,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
remove(cpi.df)
head(cpi.df <- read_xlsx(paste0(path, "Consumer Price Index_vShared.xlsx")))
cpi.df$Date_daily <- as.character(cpi.df$Date_daily)
cpi.df$Date_daily <- as.POSIXct(cpi.df$Date_daily,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
# Creating Date_Monthly and CPI_monthly columns
head(cpi.df1 <- cpi.df %>%
group_by(month(Date_daily), year(Date_daily)) %>%
mutate(Date_monthly1 = paste0(year(Date_daily),"-",month(Date_daily),"-01"),
CPI_monthly1 = mean(CPI_daily)))
cpi.df1 <- cpi.df1 %>%
ungroup() %>%
select(Date_monthly1, CPI_monthly1, Date_daily, CPI_daily)
# Creating the date format for Date_monthly1
cpi.df1$Date_monthly1 <- as.POSIXct(cpi.df1$Date_monthly1,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
# Correcting columns name
colnames(cpi.df1) <- c("Date_monthly",
"CPI_monthly",
"Date_daily",
"CPI_daily")
head(promotion.df <- read.table(paste0(path,"Hackathon_DimPromotion_SAN_vShared.csv"),
header = TRUE,
sep = ","))
str(promotion.df)
promotion.df$PromotionKey <- as.character(promotion.df$PromotionKey)
promotion.df$PromotionStartDate <- as.POSIXct(promotion.df$PromotionStartDate,
format = "%m/%d/%Y",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
promotion.df$PromotionEndDate <- as.POSIXct(promotion.df$PromotionEndDate,
format = "%m/%d/%Y",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
promotion.df$PromoMechanic <- as.factor(promotion.df$PromoMechanic)
table(promotion.df$PromoMechanic)
summary(promotion.df)
head(store.df <- read.table(paste0(path,
"Hackathon_DimStore_SAN_vShared.csv"),
header = TRUE,
sep = ","))
str(store.df)
store.df$StoreKey <- as.factor(store.df$StoreKey)
store.df$DistributionChannel <- as.factor(store.df$DistributionChannel)
store.df$StoreType <- gsub("(\\S+\\s\\S+)", "", store.df$StoreType)
store.df$StoreType <- as.factor(store.df$StoreType)
store.df$Region_Lvl1 <- str_extract(store.df$Region_Lvl1, "[A-Z](?!.*[A-Z].*)")
store.df$Region_Lvl2 <- str_extract(store.df$Region_Lvl2, "\\d+")
store.df$Region_Lvl1 <- as.factor(store.df$Region_Lvl1)
store.df$Region_Lvl2 <- as.factor(store.df$Region_Lvl2)
table(store.df$Region_Lvl1)
as.data.frame(table(store.df$Region_Lvl2))
path = "../Data-OW/"
pacman::p_load(readxl,lubridate,dplyr,timechange,stringr,shinydashboard,
shiny, ggplot2)
# Removing scientific notation
options(scipen=999)
head(product.df <- read.csv(paste0(path,"Hackathon_DimProduct_SAN_vShared.csv"),
header = TRUE), 10)
str(product.df)
product.df$ProductKey <- gsub("(i?)key_", "", product.df$ProductKey)
length(product.df$ProductKey)
# OK
product.df$ProductCategory_Lvl1 <- toupper(gsub("(\\w*\\s)", "",
product.df$ProductCategory_Lvl1))
product.df$ProductCategory_Lvl2 <- toupper(gsub("(\\w*\\s)", "",
product.df$ProductCategory_Lvl2))
# toUpper has been used in order as remedy to the difference in case present
# in the vectors
product.df$ProductCategory_Lvl1 <- as.factor(product.df$ProductCategory_Lvl1)
product.df$ProductCategory_Lvl2 <- as.factor(product.df$ProductCategory_Lvl2)
table(product.df$ProductCategory_Lvl1) # Only Category A
table(product.df$ProductCategory_Lvl2)
length(unique(product.df$SupplierKey))
head(cpi.df <- read_xlsx(paste0(path, "Consumer Price Index_vShared.xlsx")))
str(cpi.df)
cpi.df$Date_daily <- as.character(cpi.df$Date_daily)
cpi.df$Date_daily <- as.POSIXct(cpi.df$Date_daily,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
summary(cpi.df)
# Creating Date_Monthly and CPI_monthly columns
head(cpi.df1 <- cpi.df %>%
group_by(month(Date_daily), year(Date_daily)) %>%
mutate(Date_monthly1 = paste0(year(Date_daily),"-",month(Date_daily),"-01"),
CPI_monthly1 = mean(CPI_daily)))
cpi.df1 <- cpi.df1 %>%
ungroup() %>%
select(Date_monthly1, CPI_monthly1, Date_daily, CPI_daily)
# Creating the date format for Date_monthly1
cpi.df1$Date_monthly1 <- as.POSIXct(cpi.df1$Date_monthly1,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
# Correcting columns name
colnames(cpi.df1) <- c("Date_monthly",
"CPI_monthly",
"Date_daily",
"CPI_daily")
# For sake of keeping the same data sets' names
cpi.df <- cpi.df1
remove(cpi.df1)
# Final check
str(cpi.df)
# OK
head(promotion.df <- read.table(paste0(path,"Hackathon_DimPromotion_SAN_vShared.csv"),
header = TRUE,
sep = ","))
str(promotion.df)
promotion.df$PromotionKey <- as.character(promotion.df$PromotionKey)
promotion.df$PromotionStartDate <- as.POSIXct(promotion.df$PromotionStartDate,
format = "%m/%d/%Y",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
promotion.df$PromotionEndDate <- as.POSIXct(promotion.df$PromotionEndDate,
format = "%m/%d/%Y",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
promotion.df$PromoMechanic <- as.factor(promotion.df$PromoMechanic)
table(promotion.df$PromoMechanic)
summary(promotion.df)
head(store.df <- read.table(paste0(path,
"Hackathon_DimStore_SAN_vShared.csv"),
header = TRUE,
sep = ","))
str(store.df)
store.df$StoreKey <- as.factor(store.df$StoreKey)
store.df$DistributionChannel <- as.factor(store.df$DistributionChannel)
store.df$StoreType <- gsub("(\\S+\\s\\S+)", "", store.df$StoreType)
store.df$StoreType <- as.factor(store.df$StoreType)
store.df$Region_Lvl1 <- str_extract(store.df$Region_Lvl1, "[A-Z](?!.*[A-Z].*)")
store.df$Region_Lvl2 <- str_extract(store.df$Region_Lvl2, "\\d+")
store.df$Region_Lvl1 <- as.factor(store.df$Region_Lvl1)
store.df$Region_Lvl2 <- as.factor(store.df$Region_Lvl2)
table(store.df$Region_Lvl1)
as.data.frame(table(store.df$Region_Lvl2))
head(transaction.df <- read.table(paste0(path,
"Hackathon_FactSalesTransactionDATES_vShared.csv"),
header = TRUE,
sep = ","))
str(transaction.df)
head(transaction.df$TransactionDate <- as.POSIXct(transaction.df$TransactionDate,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE))))
transaction.df$DayOfWeek <- as.factor(transaction.df$DayOfWeek)
transaction.df$WeekendFlag <- as.factor(transaction.df$WeekendFlag)
transaction.df$StoreKey <- as.factor(transaction.df$StoreKey)
transaction.df$ProductKey <- as.factor(transaction.df$ProductKey)
summary(transaction.df)
test1 <- transaction.df$TransactionDate
test2 <- transaction.df$TransactionDate
test1 <- as.POSIXct(test1,
format = "%Y-%m-%d",
tz = "")
verifica <- test2[which(is.na(test1))]
head(verifica)
names(transaction.df)
length(which(transaction.df$DayOfWeek == ""))
length(which(transaction.df$WeekendFlag == ""))
transaction.df <- transaction.df %>%
filter(as.character(TransactionDate) != "")
summary(transaction.df)
test1 <- transaction.df %>%
filter(is.na(transaction.df$ActualSales))
summary(test1)
head(transaction.df$ActualSales[is.na(transaction.df$ActualSales)] <- transaction.df$RetailFullPrice[is.na(transaction.df$ActualSales)]
+ transaction.df$SalesDiscount[is.na(transaction.df$ActualSales)])
summary(transaction.df)
head(transaction.promotion.df <-read.table(paste0(path,
"Hackathon_FactSalesTransactionPromotion_vShared.csv"),
header = TRUE,
sep = ","))
transaction.promotion.df$TransactionDate <- as.POSIXct(transaction.promotion.df$TransactionDate,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
transaction.promotion.df$StoreKey <- as.factor(transaction.promotion.df$StoreKey)
transaction.promotion.df$ProductKey <- as.factor(transaction.promotion.df$ProductKey)
transaction.promotion.df$PromotionKey <- as.factor(transaction.promotion.df$PromotionKey)
summary(transaction.promotion.df)
remove(test1)
splitting_years <- function(transaction.df,start,end){
return(transaction.df[between(transaction.df$TransactionDate,
as.POSIXct(start),
as.POSIXct(end)),])
}
summary(transaction.df <- splitting_years(transaction.df, "2020-01-01","2022-12-31"))
# Now it's OK
splitting_years <- function(transaction.df,start,end){
return(transaction.df[between(transaction.df$TransactionDate,
as.POSIXct(start,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE))),
as.POSIXct(end,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))),])
}
summary(transaction.df <- splitting_years(transaction.df, "2020-01-01","2022-12-31"))
# Now it's OK
head(holiday.df <- read.table(paste0(path,"Hackathon_HolidaysMY_vShared.csv"),
header = TRUE,
sep = ","))
cpi.df<- cpi.df[between(cpi.df$Date_daily, as.POSIXct("2020-01-01"), as.POSIXct("2022-12-31")),]
promotion.df <- promotion.df[between(promotion.df$PromotionStartDate, as.POSIXct("2020-01-01"), as.POSIXct("2022-12-31")),]
# For transactions
transactions2020 <- splitting_years(transaction.df, "2020-01-01", "2020-12-31")
transactions2021 <- splitting_years(transaction.df, "2021-01-01", "2021-12-31")
transactions2022 <- splitting_years(transaction.df, "2022-01-01", "2022-12-31")
View(transactions2020)
View(cpi.df)
# CPI
transactions2020 <- left_join(transaction2020,
cpi.df,
by = c("TransactionDate" = "Date_daily"))
# CPI
transactions2020 <- left_join(transactions2020,
cpi.df,
by = c("TransactionDate" = "Date_daily"))
View(transactions2020)
View(store.df)
# Store
transactions2020 <- left_join(transactions2020,
store.df,
by = "StoreKey")
# Product
transactions2020 <- left_join(transactions2020,
product.df,
by = "ProductKey")
View(transactions2020)
View(transaction.promotion.df)
# Promotion Key
transactions2020 <- left_join(transactions2020,
transaction.promotion.df,
by = c("TransactionDate", "StoreKey", "ProductKey"))
View(transactions2020)
View(promotion.df)
# Promotion
transactions2020 <- left_join(transactions2020,
promotion.df,
by = "PromotionKey")
View(transactions2020)
3531998*24
summary(transactions2020)
save(transaction2020, file = "transactions2020.RData")
save(transactions2020, file = "transactions2020.RData")
transactions2020$StoreKey[which(is.na(transactions2020$StoreType))]
unique(transactions2020$StoreKey[which(is.na(transactions2020$StoreType))])
head(unique(transactions2020$StoreKey[which(is.na(transactions2020$StoreType))]),20)
head(unique(transactions2020$ProductKey[which(is.na(transactions2020$BrandKey))]), 20)
transaction.df$StoreKey <- gsub("_Key", "", transaction.df$StoreKey)
path = "../Data-OW/"
pacman::p_load(readxl,lubridate,dplyr,timechange,stringr,shinydashboard,
shiny, ggplot2)
# Removing scientific notation
options(scipen=999)
head(product.df <- read.csv(paste0(path,"Hackathon_DimProduct_SAN_vShared.csv"),
header = TRUE), 10)
str(product.df)
product.df$ProductKey <- gsub("(i?)key_", "", product.df$ProductKey)
length(product.df$ProductKey)
# OK
product.df$ProductCategory_Lvl1 <- toupper(gsub("(\\w*\\s)", "",
product.df$ProductCategory_Lvl1))
product.df$ProductCategory_Lvl2 <- toupper(gsub("(\\w*\\s)", "",
product.df$ProductCategory_Lvl2))
# toUpper has been used in order as remedy to the difference in case present
# in the vectors
product.df$ProductCategory_Lvl1 <- as.factor(product.df$ProductCategory_Lvl1)
product.df$ProductCategory_Lvl2 <- as.factor(product.df$ProductCategory_Lvl2)
table(product.df$ProductCategory_Lvl1) # Only Category A
table(product.df$ProductCategory_Lvl2)
length(unique(product.df$SupplierKey))
head(cpi.df <- read_xlsx(paste0(path, "Consumer Price Index_vShared.xlsx")))
str(cpi.df)
cpi.df$Date_daily <- as.character(cpi.df$Date_daily)
cpi.df$Date_daily <- as.POSIXct(cpi.df$Date_daily,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
summary(cpi.df)
# Creating Date_Monthly and CPI_monthly columns
head(cpi.df1 <- cpi.df %>%
group_by(month(Date_daily), year(Date_daily)) %>%
mutate(Date_monthly1 = paste0(year(Date_daily),"-",month(Date_daily),"-01"),
CPI_monthly1 = mean(CPI_daily)))
cpi.df1 <- cpi.df1 %>%
ungroup() %>%
select(Date_monthly1, CPI_monthly1, Date_daily, CPI_daily)
# Creating the date format for Date_monthly1
cpi.df1$Date_monthly1 <- as.POSIXct(cpi.df1$Date_monthly1,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
# Correcting columns name
colnames(cpi.df1) <- c("Date_monthly",
"CPI_monthly",
"Date_daily",
"CPI_daily")
# For sake of keeping the same data sets' names
cpi.df <- cpi.df1
remove(cpi.df1)
# Final check
str(cpi.df)
# OK
head(promotion.df <- read.table(paste0(path,"Hackathon_DimPromotion_SAN_vShared.csv"),
header = TRUE,
sep = ","))
str(promotion.df)
promotion.df$PromotionKey <- as.character(promotion.df$PromotionKey)
promotion.df$PromotionStartDate <- as.POSIXct(promotion.df$PromotionStartDate,
format = "%m/%d/%Y",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
promotion.df$PromotionEndDate <- as.POSIXct(promotion.df$PromotionEndDate,
format = "%m/%d/%Y",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
promotion.df$PromoMechanic <- as.factor(promotion.df$PromoMechanic)
table(promotion.df$PromoMechanic)
summary(promotion.df)
head(store.df <- read.table(paste0(path,
"Hackathon_DimStore_SAN_vShared.csv"),
header = TRUE,
sep = ","))
str(store.df)
store.df$StoreKey <- as.factor(store.df$StoreKey)
store.df$DistributionChannel <- as.factor(store.df$DistributionChannel)
store.df$StoreType <- gsub("(\\S+\\s\\S+)", "", store.df$StoreType)
store.df$StoreType <- as.factor(store.df$StoreType)
store.df$Region_Lvl1 <- str_extract(store.df$Region_Lvl1, "[A-Z](?!.*[A-Z].*)")
store.df$Region_Lvl2 <- str_extract(store.df$Region_Lvl2, "\\d+")
store.df$Region_Lvl1 <- as.factor(store.df$Region_Lvl1)
store.df$Region_Lvl2 <- as.factor(store.df$Region_Lvl2)
table(store.df$Region_Lvl1)
as.data.frame(table(store.df$Region_Lvl2))
head(transaction.df <- read.table(paste0(path,
"Hackathon_FactSalesTransactionDATES_vShared.csv"),
header = TRUE,
sep = ","))
str(transaction.df)
transaction.df$StoreKey <- gsub("_Key", "", transaction.df$StoreKey)
transaction.df$ProductKey <- gsub("Key", "", transaction.df$ProductKey)
head(transaction.df$TransactionDate <- as.POSIXct(transaction.df$TransactionDate,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE))))
transaction.df$DayOfWeek <- as.factor(transaction.df$DayOfWeek)
transaction.df$WeekendFlag <- as.factor(transaction.df$WeekendFlag)
transaction.df$StoreKey <- as.factor(transaction.df$StoreKey)
transaction.df$ProductKey <- as.factor(transaction.df$ProductKey)
summary(transaction.df)
test1 <- transaction.df$TransactionDate
test2 <- transaction.df$TransactionDate
test1 <- as.POSIXct(test1,
format = "%Y-%m-%d",
tz = "")
verifica <- test2[which(is.na(test1))]
head(verifica)
names(transaction.df)
length(which(transaction.df$DayOfWeek == ""))
length(which(transaction.df$WeekendFlag == ""))
transaction.df <- transaction.df %>%
filter(as.character(TransactionDate) != "")
summary(transaction.df)
test1 <- transaction.df %>%
filter(is.na(transaction.df$ActualSales))
summary(test1)
head(transaction.df$ActualSales[is.na(transaction.df$ActualSales)] <- transaction.df$RetailFullPrice[is.na(transaction.df$ActualSales)]
+ transaction.df$SalesDiscount[is.na(transaction.df$ActualSales)])
summary(transaction.df)
remove(test1)
head(transaction.promotion.df <-read.table(paste0(path,
"Hackathon_FactSalesTransactionPromotion_vShared.csv"),
header = TRUE,
sep = ","))
transaction.promotion.df$TransactionDate <- as.POSIXct(transaction.promotion.df$TransactionDate,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))
transaction.promotion.df$StoreKey <- as.factor(transaction.promotion.df$StoreKey)
transaction.promotion.df$ProductKey <- as.factor(transaction.promotion.df$ProductKey)
transaction.promotion.df$PromotionKey <- as.factor(transaction.promotion.df$PromotionKey)
summary(transaction.promotion.df)
splitting_years <- function(transaction.df,start,end){
return(transaction.df[between(transaction.df$TransactionDate,
as.POSIXct(start,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE))),
as.POSIXct(end,
format = "%Y-%m-%d",
tz = time_at_tz(
Sys.timezone(location = TRUE)))),])
}
summary(transaction.df <- splitting_years(transaction.df, "2020-01-01","2022-12-31"))
# Now it's OK
head(holiday.df <- read.table(paste0(path,"Hackathon_HolidaysMY_vShared.csv"),
header = TRUE,
sep = ","))
cpi.df<- cpi.df[between(cpi.df$Date_daily, as.POSIXct("2020-01-01"), as.POSIXct("2022-12-31")),]
promotion.df <- promotion.df[between(promotion.df$PromotionStartDate, as.POSIXct("2020-01-01"), as.POSIXct("2022-12-31")),]
# For transactions
transactions2020 <- splitting_years(transaction.df, "2020-01-01", "2020-12-31")
transactions2021 <- splitting_years(transaction.df, "2021-01-01", "2021-12-31")
transactions2022 <- splitting_years(transaction.df, "2022-01-01", "2022-12-31")
# CPI
transactions2020 <- left_join(transactions2020,
cpi.df,
by = c("TransactionDate" = "Date_daily"))
# Store
transactions2020 <- left_join(transactions2020,
store.df,
by = "StoreKey")
# Product
transactions2020 <- left_join(transactions2020,
product.df,
by = "ProductKey")
# Promotion Key
transactions2020 <- left_join(transactions2020,
transaction.promotion.df,
by = c("TransactionDate", "StoreKey", "ProductKey"))
# Promotion
transactions2020 <- left_join(transactions2020,
promotion.df,
by = "PromotionKey")
save(transactions2020, file = "transactions2020.RData")
summary(transactions2020)
head(unique(transactions2020$StoreKey[which(is.na(transactions2020$StoreType))]), 20)
head(unique(transactions2020$ProductKey[which(is.na(transactions2020$BrandKey))]), 20)
any(is.na(transactions2020[,1:10]))
any(is.na(transactions2020[,1:20]))
any(is.na(transactions2020[,1:21]))
any(is.na(transactions2020[,1:20]))
length(which(is.na(transactions2020$PromotionKey)))
length(which(is.na(transactions2020$PromoMechanic))) - length(which(is.na(transactions2020$PromotionKey)))
length(which(is.na(transactions2020$PromoMechanic))) -
(nrow(transactions2020$PromotionKey) - length(which(is.na(transactions2020$PromotionKey))))
length(which(is.na(transactions2020$PromoMechanic))) - nrow(transactions2020$PromotionKey) + length(which(is.na(transactions2020$PromotionKey)))
length(which(is.na(transactions2020$PromoMechanic))) - nrow(transactions2020$PromotionKey) + length(which(is.na(transactions2020$PromotionKey)))
length(which(is.na(transactions2020$PromoMechanic[which(!is.na(transactions2020$PromotionKey))])))
nrow(transactions2020) - 2179539
noinfo_promo <- transactions2020 %>%
filter(
which(
is.na(transactions2020$PromoMechanic[which(
!is.na(transactions2020$PromotionKey))])))
noinfo_promo <- transactions2020 %>%
filter(which(is.na(transactions2020$PromoMechanic[which(!is.na(transactions2020$PromotionKey))])))
noinfo_promo <- transactions2020 %>%
filter(transactions2020[which(is.na(transactions2020$PromoMechanic[which(!is.na(transactions2020$PromotionKey))])),])
noinfo_promo <- transactions2020 %>%
filter(transactions2020[which(is.na(PromoMechanic[which(!is.na(PromotionKey))])),])
noinfo_promo <- transactions2020[which(is.na(transactions2020$PromoMechanic[which(!is.na(transactions2020$PromotionKey))])),]
View(noinfo_promo)
noinfo_promo <- transactions2020 %>%
filter(!is.na(PromotionKey))
View(noinfo_promo)
noinfo_promo <- transactions2020 %>%
filter(!is.na(PromotionKey)) %>%
filter(is.na(PromoMechanic))
noinfo_promo <- transactions2020 %>%
filter(!is.na(PromotionKey)) %>%
filter(is.na(PromoMechanic))
View(noinfo_promo)
View(noinfo_promo)
View(noinfo_promo)
noinfo_promo <- transactions2020 %>%
filter(!is.na(PromotionKey)) %>%
filter(is.na(PromoMechanic)) %>%
select(ProductKey, PromotionKey, PromoMechanic)
# Check the mismatch
mismatch <- left_join(promotion.df,
noinfo_promo,
by = "PromotionKey")
View(mismatch)
any(!is.na(mismatch$ProductKey))
View(mismatch)
noinfo_promo <- transactions2020 %>%
filter(!is.na(PromotionKey)) %>%
filter(is.na(PromoMechanic)) %>%
select(ProductKey, PromotionKey, PromoMechanic, TransactionDate)
View(noinfo_promo)
View(noinfo_promo)
remove(noinfo_promo, mismatch)
